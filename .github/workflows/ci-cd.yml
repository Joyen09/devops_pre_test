name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.21

    - name: Install dependencies
      run: |
        cd backend
        go mod download
        go mod tidy

    - name: Build backend
      run: |
        cd backend
        go build -v ./...

    - name: Test backend
      run: |
        cd backend
        go test -v ./...

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Build frontend
      run: |
        cd frontend
        npm ci
        npm run build

    - name: Test frontend
      run: |
        cd frontend
        npm test

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push backend
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/customer-data-backend:latest

    - name: Build and push frontend
      uses: docker/build-push-action@v2
      with:
        context: ./frontend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/customer-data-frontend:latest

    - name: Extract package-lock.json
      run: |
        docker create --name temp ${{ secrets.DOCKERHUB_USERNAME }}/customer-data-frontend:latest
        docker cp temp:/app/package-lock.json ./frontend/package-lock.json
        docker rm temp

    - name: Commit and push package-lock.json
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add frontend/package-lock.json
        git commit -m "Update package-lock.json [skip ci]" || echo "No changes to commit"
        git push https://x-access-token:${{ secrets.CI_TOKEN }}@github.com/Joyen09/devops_pre_test.git HEAD:main

  deploy-to-k8s:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1

    - name: Deploy to Kubernetes
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
        export KUBECONFIG=./kubeconfig
        kubectl apply -f k8s/
